// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was generated by jsonschemagen. DO NOT EDIT.

package genkit

type FlowError struct {
	Error      string `json:"error,omitempty"`
	Stacktrace string `json:"stacktrace,omitempty"`
}

type FlowInvokeEnvelopeMessageResume struct {
	FlowID  string `json:"flowId,omitempty"`
	Payload any    `json:"payload,omitempty"`
}

type FlowInvokeEnvelopeMessageRetry struct {
	FlowID string `json:"flowId,omitempty"`
}

type FlowInvokeEnvelopeMessageRunScheduled struct {
	FlowID string `json:"flowId,omitempty"`
}

type FlowInvokeEnvelopeMessageSchedule struct {
	Delay float64 `json:"delay,omitempty"`
	Input any     `json:"input,omitempty"`
}

type FlowInvokeEnvelopeMessageStart struct {
	Input  any               `json:"input,omitempty"`
	Labels map[string]string `json:"labels,omitempty"`
}

type FlowInvokeEnvelopeMessageState struct {
	FlowID string `json:"flowId,omitempty"`
}

type FlowResponse struct {
	Response any `json:"response,omitempty"`
}

type FlowExecution struct {
	// end time in milliseconds since the epoch
	EndTime Milliseconds `json:"endTime,omitempty"`
	// start time in milliseconds since the epoch
	StartTime Milliseconds `json:"startTime,omitempty"`
	TraceIDs  []string     `json:"traceIds,omitempty"`
}

type BlockedOnStep struct {
	Name   string `json:"name,omitempty"`
	Schema string `json:"schema,omitempty"`
}
